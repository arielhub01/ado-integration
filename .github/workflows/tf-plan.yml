name: "Terraform-Infra-Plan"

on:
  # push:
  #   branches:
  #     - FeatureSA01
  workflow_dispatch:
    inputs:
      env_workspace:
        description: 'Terraform Workspace'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: "Set Workspace ${{ github.event.inputs.env_workspace }}"
        id: setworkspace
        run: |
          sed -i 's/env-dev/iac-${{ github.event.inputs.env_workspace }}/g' ./main.tf

      - name: "Terraform Init"
        id: init
        run: |
          terraform init --var-file ./${{ github.event.inputs.env_workspace }}-varfile.tfvars

      - name: "Terraform Validate"
        id: validate
        run: |
           terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        run: |
           terraform plan --var-file ./${{ github.event.inputs.env_workspace }}-varfile.tfvars -out ./iac-${{ github.event.inputs.env_workspace }}.tfplan -no-color
           ls -la *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
             name: my-artifact-iac-${{ github.event.inputs.env_workspace }}
             path: ./

      - name: Run Checkov to scan the Terraform plan
        run: |
                 docker pull bridgecrew/checkov:latest
                 docker run -v $(pwd):/tf -e TF_REGISTRY_TOKEN=${{ secrets.TF_API_TOKEN }} -t bridgecrew/checkov --download-external-modules true -d /tf --skip-check INFO